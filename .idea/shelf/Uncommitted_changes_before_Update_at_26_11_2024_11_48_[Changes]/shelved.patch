Index: src/main/java/RedSocial.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class RedSocial {\r\n    private List<User> users;\r\n    private User activeUser;\r\n\r\n    public RedSocial() {\r\n        this.users = new ArrayList<>();\r\n    }\r\n\r\n    public List<User> getUsuarios() {\r\n        return users;\r\n    }\r\n\r\n    public void setUsuarios(List<User> users) {\r\n        this.users = users;\r\n    }\r\n\r\n    public User getActiveUser() {\r\n        return activeUser;\r\n    }\r\n\r\n    public void setActiveUser(User activeUser) {\r\n        this.activeUser = activeUser;\r\n    }\r\n\r\n    public void popularRedSocial(){\r\n        User user1 = new User(\"aperez\");\r\n        user1.addPost(new Text(\"¡Hola mundo!\"));\r\n        user1.addPost(new Text(\"S.O.S.\"));\r\n        addUsers(user1);\r\n        User user2 = new User(\"alojo\");\r\n        user2.addPost(new Text(\"Prueba número 11201223013.\"));\r\n        addUsers(user2);\r\n        User user3 = new User(\"agarcia\");\r\n        user3.addPost(new Image(\"Amanecer en la montaña\", 1920, 1080));\r\n        user3.addPost(new Video(\"Tutorial de Java\", 720, 300));\r\n        addUsers(user3);\r\n    }\r\n\r\n    public void logOut(){\r\n        if (activeUser != null) {\r\n            System.out.println(\"Adiós, \" + activeUser.getName() + \". Has cerrado sesión correctamente.\");\r\n           activeUser=null;\r\n        } else {\r\n            System.out.println(\"No hay ningún usuario autenticado.\");\r\n\r\n        }\r\n    }\r\n\r\n    public void logIn() {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.print(\"Introduce tu nombre de usuario para iniciar sesión: \");\r\n        String nombreUsuario = scanner.nextLine();\r\n\r\n        for (User user : users) {\r\n            if (user.getName().equalsIgnoreCase(nombreUsuario)) {\r\n                System.out.println(\"¡Bienvenido, \" + user.getName() + \"!\");\r\n                activeUser= user;\r\n            }\r\n        }if (activeUser==null){\r\n            System.out.println(\"El usuario \\\"\" + nombreUsuario + \"\\\" no está registrado. Por favor, regístrate o intenta con otro nombre.\");\r\n        }\r\n\r\n    }\r\n\r\n    public void registerUser(String registrationName){\r\n        if (buscarUsuario(registrationName)==null){\r\n            User newUser = new User(registrationName);\r\n            users.add(newUser);\r\n            activeUser=newUser;\r\n        }else {\r\n            System.out.println(\"Este usuario ya existe\");\r\n        }\r\n    }\r\n\r\n    public void showUsers() {\r\n        if (users.isEmpty()) {\r\n            System.out.println(\"No hay usuarios en la red social.\");\r\n        } else {\r\n            System.out.println(\"Lista de usuarios:\");\r\n            for (User user : users) {\r\n                System.out.println(\"- \" + user.getName());\r\n            }\r\n        }\r\n    }\r\n\r\n    public void addUsers(User user) {\r\n        if (existeUsuario(user.getName())) {\r\n            System.out.println(\"El usuario \\\"\" + user.getName() + \"\\\" ya existe en la red social. No se puede añadir.\");\r\n        } else {\r\n            users.add(user);\r\n\r\n        }\r\n    }\r\n\r\n    public boolean existeUsuario(String nombre) {\r\n        for (User user : users) {\r\n            if (user.getName().equals(nombre)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public void deleteUsers(User user) {\r\n        users.remove(user);\r\n    }\r\n\r\n    public User buscarUsuario(String nombre) {\r\n        for (User user : users) {\r\n            if (user.getName().equalsIgnoreCase(nombre)) {\r\n                return user;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void listPosts(User user) {\r\n        for (Post post : user.getPosts()) {\r\n            System.out.println(post);\r\n        }\r\n    }\r\n\r\n    public void listarComentarios(User userAutenticado) {\r\n\r\n        for (User user : users) {\r\n            for (Post post : user.getPosts()) {\r\n                for (Comentario comentario : post.getComments()) {\r\n                    if (comentario != null) {\r\n                        System.out.println(\"- En el post: \" + post + \" de \" + user.getName() + \" -> \" + comentario.getText());\r\n\r\n                    } else {\r\n                        System.out.println(\"No realizó ningún comentario.\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/RedSocial.java b/src/main/java/RedSocial.java
--- a/src/main/java/RedSocial.java	(revision 763f5aa4d8be375268fa2a291128a8e7f290eb81)
+++ b/src/main/java/RedSocial.java	(date 1732618050671)
@@ -88,7 +88,7 @@
     }
 
     public void addUsers(User user) {
-        if (existeUsuario(user.getName())) {
+        if (usersExist(user.getName())) {
             System.out.println("El usuario \"" + user.getName() + "\" ya existe en la red social. No se puede añadir.");
         } else {
             users.add(user);
@@ -96,7 +96,7 @@
         }
     }
 
-    public boolean existeUsuario(String nombre) {
+    public boolean usersExist (String nombre) {
         for (User user : users) {
             if (user.getName().equals(nombre)) {
                 return true;
@@ -118,13 +118,13 @@
         return null;
     }
 
-    public void listPosts(User user) {
+    public void listPosts (User user) {
         for (Post post : user.getPosts()) {
             System.out.println(post);
         }
     }
 
-    public void listarComentarios(User userAutenticado) {
+    public void listComments (User userAutenticado) {
 
         for (User user : users) {
             for (Post post : user.getPosts()) {
Index: src/main/java/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class User {\r\n    private String name;\r\n    private List<User> follow;\r\n    private List<Post> posts;\r\n\r\n    public User(String name) {\r\n        this.name = name;\r\n        this.follow = new ArrayList<>();\r\n        this.posts = new ArrayList<>();\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public List<User> getFollow() {\r\n        return follow;\r\n    }\r\n\r\n    public List<Post> getPosts() {\r\n        return posts;\r\n    }\r\n\r\n    public void seguir(User user) {\r\n        if (!follow.contains(user)) {\r\n            follow.add(user);\r\n        }\r\n    }\r\n\r\n    public void unfollow(User user) {\r\n        follow.remove(user);\r\n    }\r\n\r\n    public void addPost(Post post) {\r\n        posts.add(post);\r\n    }\r\n\r\n    public void deletePost(Post post) {\r\n        posts.remove(post);\r\n    }\r\n\r\n    public void showFollowUsers() {\r\n        if (follow.isEmpty()) {\r\n            System.out.println(\"No sigue a ningún usuario.\");\r\n        } else {\r\n            System.out.println(\"Sigue a los siguientes usuarios:\");\r\n            for (User user : follow) {\r\n                System.out.println(\"- \" + user.getName());\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/User.java b/src/main/java/User.java
--- a/src/main/java/User.java	(revision 763f5aa4d8be375268fa2a291128a8e7f290eb81)
+++ b/src/main/java/User.java	(date 1732618050672)
@@ -24,7 +24,7 @@
         return posts;
     }
 
-    public void seguir(User user) {
+    public void follow (User user) {
         if (!follow.contains(user)) {
             follow.add(user);
         }
Index: src/main/java/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Scanner;\r\n//15:21 21/11\r\npublic class App {\r\n\r\n    public void logMenu(RedSocial redSocial) {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int opcion;\r\n        do {\r\n\r\n            System.out.println(\"\\nSeleccione una opción:\");\r\n            System.out.println(\"1. Iniciar sesión\");\r\n            System.out.println(\"2. Registrarse\");\r\n            System.out.println(\"3. Salir\");\r\n            opcion = scanner.nextInt();\r\n            scanner.nextLine();\r\n            switch (opcion) {\r\n                case 1:{\r\n                    if (redSocial.getActiveUser()==null){\r\n                        redSocial.logIn();\r\n                        if (redSocial.getActiveUser()!=null){\r\n                        mainMenu(redSocial,scanner);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                case 2: {\r\n                    String registerName = Utils.string(\"Ingrese su nombre de usuario: \");\r\n                    redSocial.registerUser(registerName);\r\n                    mainMenu(redSocial, scanner);\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    System.out.println(\"Saliendo...\");\r\n                    break;\r\n                }\r\n                default:\r\n                    System.out.println(\"Opción no válida.\");\r\n            }\r\n        } while (opcion != 3);\r\n    }\r\n\r\n    public static void mainMenu (RedSocial redSocial, Scanner scanner) {\r\n\r\n            int opcion;\r\n            do {\r\n\r\n                System.out.println(\"\\nSeleccione una opción:\");\r\n                System.out.println(\"1. Agregar usuario\");\r\n                System.out.println(\"2. Eliminar usuario\");\r\n                System.out.println(\"3. Seguir usuario\");\r\n                System.out.println(\"4. Dejar de seguir usuario\");\r\n                System.out.println(\"5. Agregar post\");\r\n                System.out.println(\"6. Agregar comentario\");\r\n                System.out.println(\"7. Listar posts de un usuario\");\r\n                System.out.println(\"8. Listar comentarios de un usuario\");\r\n                System.out.println(\"9. Contar comentarios de un post\");\r\n                System.out.println(\"10. Mostrar usuarios\");\r\n                System.out.println(\"11. Mostrar usuarios seguidos\");\r\n                System.out.println(\"12. Cerrar sesión\");\r\n                System.out.println(\"13. Salir\");\r\n\r\n                opcion = scanner.nextInt();\r\n                scanner.nextLine();\r\n\r\n                switch (opcion) {\r\n                    //Añadir usuario\r\n                    case 1: {\r\n                        System.out.print(\"Nombre del usuario:\");\r\n                        String nombreUsuarioAñadir = scanner.nextLine();\r\n                        User user = new User(nombreUsuarioAñadir);\r\n                        redSocial.addUsers(user);\r\n                        break;\r\n                    }\r\n                    //Eliminar usuario\r\n                    case 2: {\r\n                        System.out.println(\"Elija usuario a eliminar:\");\r\n                        redSocial.showUsers();\r\n                        String nombreUsuarioEliminar = scanner.nextLine();\r\n                        User user = redSocial.buscarUsuario(nombreUsuarioEliminar);\r\n                        if (user != null) {\r\n                            redSocial.deleteUsers(user);\r\n                            System.out.println(\"Usuario eliminado.\");\r\n                        } else {\r\n                            System.out.println(\"Usuario no encontrado.\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    //Seguir usuario\r\n                    case 3: {\r\n                        System.out.print(\"¿A quién desea seguir?\");\r\n                        String nombreSeguir = scanner.nextLine();\r\n                        User userASeguir = redSocial.buscarUsuario(nombreSeguir);\r\n\r\n                        if (userASeguir != null) {\r\n\r\n                            System.out.println(\"Ahora sigues a \" + userASeguir.getName());\r\n                        } else {\r\n                            System.out.println(\"Usuario no encontrado.\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    //Dejar de seguir usuario\r\n                    case 4: {\r\n                        System.out.print(\"¿A quién desea dejar de seguir?\");\r\n                        String nombreDejarSeguir = scanner.nextLine();\r\n                        User userADejarSeguir = redSocial.buscarUsuario(nombreDejarSeguir);\r\n\r\n                        if (userADejarSeguir != null) {\r\n                            redSocial.getActiveUser().unfollow(userADejarSeguir);\r\n                            System.out.println(\"Has dejado de seguir a \" + userADejarSeguir.getName());\r\n                        } else {\r\n                            System.out.println(\"Usuario no encontrado.\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    //Publicar post\r\n                    case 5: {\r\n\r\n                        System.out.println(\"Seleccione el tipo de post:\");\r\n                        System.out.println(\"1. Texto\");\r\n                        System.out.println(\"2. Imagen\");\r\n                        System.out.println(\"3. Video\");\r\n                        int tipoPost = scanner.nextInt();\r\n                        scanner.nextLine();\r\n\r\n                        switch (tipoPost) {\r\n                            case 1:\r\n                                System.out.print(\"Contenido del texto: \");\r\n                                String contenido = scanner.nextLine();\r\n                                Post textoPost = new Text(contenido);\r\n                                redSocial.getActiveUser().addPost(textoPost);\r\n                                System.out.println(\"Post de texto agregado.\");\r\n                                break;\r\n\r\n                            case 2:\r\n                                System.out.print(\"Título de la imagen: \");\r\n                                String tituloImagen = scanner.nextLine();\r\n                                System.out.print(\"Ancho de la imagen: \");\r\n                                int ancho = scanner.nextInt();\r\n                                System.out.print(\"Alto de la imagen: \");\r\n                                int alto = scanner.nextInt();\r\n                                Post imagenPost = new Image(tituloImagen, ancho, alto);\r\n                                redSocial.getActiveUser().addPost(imagenPost);\r\n                                System.out.println(\"Post de imagen agregado.\");\r\n                                break;\r\n\r\n                            case 3:\r\n                                System.out.print(\"Título del video: \");\r\n                                String tituloVideo = scanner.nextLine();\r\n                                System.out.print(\"Calidad del video: \");\r\n                                int calidad = scanner.nextInt();\r\n                                System.out.print(\"Duración en segundos: \");\r\n                                int duracion = scanner.nextInt();\r\n                                Post videoPost = new Video(tituloVideo, calidad, duracion);\r\n                                redSocial.getActiveUser().addPost(videoPost);\r\n                                System.out.println(\"Post de video agregado.\");\r\n                                break;\r\n\r\n                            default:\r\n                                System.out.println(\"Tipo de post no válido.\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    //Comentar post\r\n                    case 6: {\r\n                        if (redSocial.getActiveUser() != null) {\r\n                            System.out.print(\"Nombre del usuario del post a comentar: \");\r\n                            String nombreUsuarioACom = scanner.nextLine();\r\n                            User user = redSocial.buscarUsuario(nombreUsuarioACom);\r\n\r\n                            if (user != null) {\r\n                                System.out.println(\"Seleccione el número del post:\");\r\n                                for (int i = 0; i < user.getPosts().size(); i++) {\r\n                                    System.out.println(i + \": \" + user.getPosts().get(i));\r\n                                }\r\n                                int postIndex = scanner.nextInt();\r\n                                scanner.nextLine();\r\n\r\n                                if (postIndex >= 0 && postIndex < user.getPosts().size()) {\r\n                                    Post post = user.getPosts().get(postIndex);\r\n                                    System.out.print(\"Escribe el comentario: \");\r\n                                    String textoComentario = scanner.nextLine();\r\n                                    Comentario comentario = new Comentario(textoComentario, redSocial.getActiveUser());\r\n                                    post.agregarComentario(comentario);\r\n                                    System.out.println(\"Comentario agregado.\");\r\n                                } else {\r\n                                    System.out.println(\"Número de post no válido.\");\r\n                                }\r\n                            } else {\r\n                                System.out.println(\"Usuario no encontrado.\");\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"Usuario no encontrado.\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    //Listar post\r\n                    case 7: {\r\n                        System.out.print(\"¿De qué usuario quiere ver post?\");\r\n                        String nombreUsuarioListarPost = scanner.nextLine();\r\n                        User user = redSocial.buscarUsuario(nombreUsuarioListarPost);\r\n                        if (user != null) {\r\n                            redSocial.listPosts(user);\r\n                        } else {\r\n                            System.out.println(\"Usuario no encontrado.\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    //Listar comentarios\r\n                    case 8: {\r\n                        redSocial.listarComentarios(redSocial.getActiveUser());\r\n                        break;\r\n                    }\r\n                    //Contar comentarios\r\n                    case 9: {\r\n                        System.out.print(\"¿De qué usuario quiere consultar post? \");\r\n                        String nombreUsuarioContar = scanner.nextLine();\r\n                        User user = redSocial.buscarUsuario(nombreUsuarioContar);\r\n\r\n                        if (user != null) {\r\n                            System.out.println(\"Seleccione el número del post:\");\r\n                            for (int i = 0; i < user.getPosts().size(); i++) {\r\n                                System.out.println(i + \": \" + user.getPosts().get(i));\r\n                            }\r\n                            int postIndex = scanner.nextInt();\r\n\r\n                            if (postIndex >= 0 && postIndex < user.getPosts().size()) {\r\n                                Post post = user.getPosts().get(postIndex);\r\n                                System.out.println(\"El número de comentarios en el post es: \" + post.contarComentarios());\r\n                            } else {\r\n                                System.out.println(\"Número de post no válido.\");\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"Usuario no encontrado.\");\r\n                        }\r\n                    }\r\n                    break;\r\n                    //Mostrar usuarios\r\n                    case 10: {\r\n                        redSocial.showUsers();\r\n                        break;\r\n                    }\r\n                    //Mostrar usuarios seguidos\r\n                    case 11: {\r\n                        redSocial.getActiveUser().showFollowUsers();\r\n                        break;\r\n                    }\r\n                    case 12: {\r\n                        redSocial.logOut();\r\n                        opcion=13;\r\n\r\n                    }\r\n                    //Salir\r\n                    case 13: {\r\n                        System.out.println(\"Saliendo...\");\r\n                        return;\r\n\r\n                    }\r\n                    default:\r\n                        System.out.println(\"Opción no válida.\");\r\n                }\r\n            } while (opcion != 13);\r\n\r\n            scanner.close();\r\n        }\r\n    }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/App.java b/src/main/java/App.java
--- a/src/main/java/App.java	(revision 763f5aa4d8be375268fa2a291128a8e7f290eb81)
+++ b/src/main/java/App.java	(date 1732618050671)
@@ -93,7 +93,7 @@
                         User userASeguir = redSocial.buscarUsuario(nombreSeguir);
 
                         if (userASeguir != null) {
-
+                            redSocial.getActiveUser().follow(userASeguir);
                             System.out.println("Ahora sigues a " + userASeguir.getName());
                         } else {
                             System.out.println("Usuario no encontrado.");
@@ -209,7 +209,7 @@
                     }
                     //Listar comentarios
                     case 8: {
-                        redSocial.listarComentarios(redSocial.getActiveUser());
+                        redSocial.listComments(redSocial.getActiveUser());
                         break;
                     }
                     //Contar comentarios
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"eb061b1f-3f96-4e4f-87e9-22c54964e64a\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;ismaelleon-ai&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/ismaelleon-ai/Red_social.git&quot;,\r\n    &quot;accountId&quot;: &quot;ff73f0a7-9aa9-467f-ae88-5c4171986387&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2okkeXqbG0ma3U0Uu8pAAQUfWYA\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"Application.RedSocial.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"L:/MÁSTER/workspace/Red_social\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"Red_social\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RedSocial\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"RedSocial\" />\r\n      <module name=\"Red_social\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.RedSocial\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"eb061b1f-3f96-4e4f-87e9-22c54964e64a\" name=\"Changes\" comment=\"\" />\r\n      <created>1731421059916</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1731421059916</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 763f5aa4d8be375268fa2a291128a8e7f290eb81)
+++ b/.idea/workspace.xml	(date 1732618063814)
@@ -6,6 +6,15 @@
   <component name="ChangeListManager">
     <list default="true" id="eb061b1f-3f96-4e4f-87e9-22c54964e64a" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/App.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/App.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Comentario.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Comentario.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Imagen.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Imagen.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Post.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Post.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/RedSocial.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/RedSocial.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Texto.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Text.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Usuario.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/User.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Video.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Video.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -45,18 +54,18 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.Main.executor": "Run",
-    "Application.RedSocial.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "main",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "L:/MÁSTER/workspace/Red_social"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
+    &quot;Application.RedSocial.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;L:/MÁSTER/workspace/Red_social&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager" selected="Application.Main">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Main" />
